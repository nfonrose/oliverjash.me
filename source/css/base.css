/* line 1, ../_scss/placeholders/_styled-list.scss */
.nav-list, .archived-posts-list {
  list-style: none;
  padding-left: 0;
}

/* line 1, ../_scss/placeholders/_horizontal-list.scss */
.nav-list {
  *zoom: 1;
}
/* line 38, ../../../../../../../Library/Ruby/Gems/1.8/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/utilities/general/_clearfix.scss */
.nav-list:after {
  content: "";
  display: table;
  clear: both;
}
/* line 5, ../_scss/placeholders/_horizontal-list.scss */
.nav-list li {
  display: inline;
}

/* line 1, ../_scss/placeholders/_typography.scss */
body {
  font-family: ff-meta-serif-web-pro, "Lucida Bright", Constantia, Georgia, serif;
}

/* line 5, ../_scss/placeholders/_typography.scss */
h1, .h1,
h2,
.h2, .post .post-time,
.post .post-excerpt-permalink {
  font-family: abril-display, Palatino, Georgia, serif;
}

/* line 9, ../_scss/placeholders/_typography.scss */
h3, .h3,
h4,
.h4 {
  font-family: proxima-nova-sc-osf, "Proxima Nova SC OSF", "Proxima Nova", sans-serif;
}

/* line 15, ../_scss/foundations/_reset.scss */
h1, .h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6,
blockquote,
p,
pre,
dl,
menu,
ol,
ul,
hr {
  margin: 0;
}

/* line 19, ../_scss/foundations/_reset.scss */
hr {
  border: 0;
}

/* Author note: modified by Oliver Joseph Ash */
/* normalize.css 2012-03-11T12:53 UTC - http://github.com/necolas/normalize.css */
/* =============================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Corrects block display not defined in IE6/7/8/9 & FF3
 */
/* line 23, ../_scss/foundations/_normalise.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block;
}

/*
 * Corrects inline-block display not defined in IE6/7/8/9 & FF3
 */
/* line 33, ../_scss/foundations/_normalise.scss */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

/*
 * Prevents modern browsers from displaying 'audio' without controls
 * Remove excess height in iOS5 devices
 */
/* line 44, ../_scss/foundations/_normalise.scss */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Addresses styling for 'hidden' attribute not present in IE7/8/9, FF3, S4
 * Known issue: no IE6 support
 */
/* line 54, ../_scss/foundations/_normalise.scss */
[hidden] {
  display: none;
}

/* =============================================================================
   Base
   ========================================================================== */
/*
 * 1. Corrects text resizing oddly in IE6/7 when body font-size is set using em units
 *    http://clagnut.com/blog/348/#c790
 * 2. Prevents iOS text size adjust after orientation change, without disabling user zoom
 *    www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/
 */
/* line 70, ../_scss/foundations/_normalise.scss */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/*
 * Addresses font-family inconsistency between 'textarea' and other form elements.
 */
/* line 84, ../_scss/foundations/_normalise.scss */
html,
button,
input,
select,
textarea {
  font-family: sans-serif;
}

/*
 * Addresses margins handled incorrectly in IE6/7
 */
/* line 92, ../_scss/foundations/_normalise.scss */
body {
  margin: 0;
}

/* =============================================================================
   Links
   ========================================================================== */
/*
 * Addresses outline displayed oddly in Chrome
 */
/* line 105, ../_scss/foundations/_normalise.scss */
a:focus {
  outline: thin dotted;
}

/*
 * Improves readability when focused and also mouse hovered in all browsers
 * people.opera.com/patrickl/experiments/keyboard/test
 */
/* line 115, ../_scss/foundations/_normalise.scss */
a:hover,
a:active {
  outline: 0;
}

/* =============================================================================
   Typography
   ========================================================================== */
/* line 129, ../_scss/foundations/_normalise.scss */
h1, .h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-size: 100%;
}

/*
 * Addresses styling not present in IE7/8/9, S5, Chrome
 */
/* line 138, ../_scss/foundations/_normalise.scss */
abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Addresses style set to 'bolder' in FF3+, S4/5, Chrome
*/
/* line 147, ../_scss/foundations/_normalise.scss */
b,
strong {
  font-weight: bold;
}

/* line 151, ../_scss/foundations/_normalise.scss */
blockquote {
  margin-left: 40px;
}

/*
 * Addresses styling not present in S5, Chrome
 */
/* line 159, ../_scss/foundations/_normalise.scss */
dfn {
  font-style: italic;
}

/*
 * Addresses styling not present in IE6/7/8/9
 */
/* line 167, ../_scss/foundations/_normalise.scss */
mark {
  background: #ff0;
  color: #000;
}

/*
 * Corrects font family set oddly in IE6, S4/5, Chrome
 * en.wikipedia.org/wiki/User:Davidgothberg/Test59
 */
/* line 180, ../_scss/foundations/_normalise.scss */
pre,
code,
kbd,
samp {
  font-family: monospace, serif;
  _font-family: 'courier new', monospace;
  font-size: 1em;
}

/*
 * Improves readability of pre-formatted text in all browsers
 */
/* line 190, ../_scss/foundations/_normalise.scss */
pre {
  white-space: pre;
  word-wrap: normal;
  overflow: auto;
}

/*
 * 1. Addresses CSS quotes not supported in IE6/7
 * 2. Addresses quote property not supported in S4
 */
/* 1 */
/* line 203, ../_scss/foundations/_normalise.scss */
q {
  quotes: none;
}

/* 2 */
/* line 210, ../_scss/foundations/_normalise.scss */
q:before,
q:after {
  content: '';
  content: none;
}

/* line 215, ../_scss/foundations/_normalise.scss */
small {
  font-size: 75%;
}

/*
 * Prevents sub and sup affecting line-height in all browsers
 * gist.github.com/413930
 */
/* line 225, ../_scss/foundations/_normalise.scss */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

/* line 232, ../_scss/foundations/_normalise.scss */
sup {
  top: -0.5em;
}

/* line 236, ../_scss/foundations/_normalise.scss */
sub {
  bottom: -0.25em;
}

/* =============================================================================
   Lists
   ========================================================================== */
/*
 * Addresses margins set differently in IE6/7
 */
/* line 249, ../_scss/foundations/_normalise.scss */
dd {
  margin: 0 0 0 40px;
}

/*
 * Addresses paddings set differently in IE6/7
 */
/* line 259, ../_scss/foundations/_normalise.scss */
menu,
ol,
ul {
  padding: 0 0 0 40px;
}

/*
 * Corrects list images handled incorrectly in IE7
 */
/* line 268, ../_scss/foundations/_normalise.scss */
nav ul,
nav ol {
  list-style: none;
  list-style-image: none;
}

/* =============================================================================
   Embedded content
   ========================================================================== */
/*
 * 1. Removes border when inside 'a' element in IE6/7/8/9, FF3
 * 2. Improves image quality when scaled in IE7
 *    code.flickr.com/blog/2008/11/12/on-ui-quality-the-little-things-client-side-image-resizing/
 */
/* line 284, ../_scss/foundations/_normalise.scss */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */
}

/*
 * Corrects overflow displayed oddly in IE9
 */
/* line 293, ../_scss/foundations/_normalise.scss */
svg:not(:root) {
  overflow: hidden;
}

/* =============================================================================
   Figures
   ========================================================================== */
/*
 * Addresses margin not present in IE6/7/8/9, S5, O11
 */
/* line 306, ../_scss/foundations/_normalise.scss */
figure {
  margin: 0;
}

/* =============================================================================
   Forms
   ========================================================================== */
/*
 * Corrects margin displayed oddly in IE6/7
 */
/* line 319, ../_scss/foundations/_normalise.scss */
form {
  margin: 0;
}

/*
 * Define consistent border, margin, and padding
 */
/* line 327, ../_scss/foundations/_normalise.scss */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Corrects color not being inherited in IE6/7/8/9
 * 2. Corrects text not wrapping in FF3
 * 3. Corrects alignment displayed oddly in IE6/7
 */
/* line 339, ../_scss/foundations/_normalise.scss */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */
}

/*
 * 1. Corrects font size not being inherited in all browsers
 * 2. Addresses margins set differently in IE6/7, FF3+, S5, Chrome
 * 3. Improves appearance and consistency in all browsers
 */
/* line 355, ../_scss/foundations/_normalise.scss */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */
}

/*
 * Addresses FF3/4 setting line-height on 'input' using !important in the UA stylesheet
 */
/* line 367, ../_scss/foundations/_normalise.scss */
button,
input {
  line-height: normal;
  /* 1 */
}

/*
 * 1. Improves usability and consistency of cursor style between image-type 'input' and others
 * 2. Corrects inability to style clickable 'input' types in iOS
 * 3. Removes inner spacing in IE7 without affecting normal text inputs
 *    Known issue: inner spacing remains in IE6
 */
/* line 381, ../_scss/foundations/_normalise.scss */
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
  /* 1 */
  -webkit-appearance: button;
  /* 2 */
  *overflow: visible;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements
 */
/* line 392, ../_scss/foundations/_normalise.scss */
button[disabled],
input[disabled] {
  cursor: default;
}

/*
 * 1. Addresses box sizing set to content-box in IE8/9
 * 2. Removes excess padding in IE8/9
 * 3. Removes excess padding in IE7
    Known issue: excess padding remains in IE6
 */
/* line 404, ../_scss/foundations/_normalise.scss */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */
}

/*
 * 1. Addresses appearance set to searchfield in S5, Chrome
 * 2. Addresses box-sizing set to border-box in S5, Chrome (include -moz to future-proof)
 */
/* line 416, ../_scss/foundations/_normalise.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Removes inner padding and search cancel button in S5, Chrome on OS X
 */
/* line 428, ../_scss/foundations/_normalise.scss */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
}

/*
 * Removes inner padding and border in FF3+
 * www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/
 */
/* line 438, ../_scss/foundations/_normalise.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * 1. Removes default vertical scrollbar in IE6/7/8/9
 * 2. Improves readability and alignment in all browsers
 */
/* line 448, ../_scss/foundations/_normalise.scss */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* =============================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells
 */
/* line 462, ../_scss/foundations/_normalise.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 1, ../_scss/foundations/_typography.scss */
body {
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-weight: 500;
  color: black;
}
/* line 8, ../_scss/foundations/_typography.scss */
body a {
  color: steelBlue;
}

/* line 13, ../_scss/foundations/_typography.scss */
a {
  text-decoration: none;
}
/* line 16, ../_scss/foundations/_typography.scss */
a:hover {
  text-decoration: underline;
}

/* line 25, ../_scss/foundations/_typography.scss */
h1, .h1,
h2,
.h2 {
  font-weight: 600;
}

/* line 31, ../_scss/foundations/_typography.scss */
h3, .h3,
h4,
.h4 {
  letter-spacing: 2px;
  font-weight: 400;
}

/* line 37, ../_scss/foundations/_typography.scss */
h3, .h3 {
  text-transform: uppercase;
}

/* line 41, ../_scss/foundations/_typography.scss */
h4, .h4 {
  text-transform: lowercase;
}

/* line 45, ../_scss/foundations/_typography.scss */
.centered-text, .post .post-time,
.post .post-excerpt-permalink {
  text-align: center;
}

/*
Would be nice to use @content, but Sass' content block lives in the caller
scope
*/
/* line 1, ../_scss/objects/_nav-list.scss */
.nav-list {
  text-align: center;
}
/* line 5, ../_scss/objects/_nav-list.scss */
.nav-list li {
  margin-left: 1em;
  font-weight: 600;
}
/* line 8, ../_scss/objects/_nav-list.scss */
.nav-list li:first-child {
  margin-left: 0;
}

/* line 1, ../_scss/objects/_post.scss */
.post {
  background-color: white;
  overflow: hidden;
  border-bottom: 1px solid #d9d9d9;
}
/* line 6, ../_scss/objects/_post.scss */
.post.last {
  border-bottom: 0;
}
/* line 10, ../_scss/objects/_post.scss */
.post .post-image {
  display: block;
  width: 100%;
}
/* line 16, ../_scss/objects/_post.scss */
.post .post-time,
.post .post-excerpt-permalink {
  font-style: italic;
  font-weight: 700;
}

/* line 23, ../_scss/objects/_post.scss */
.post-content {
  margin-left: auto;
  margin-right: auto;
}
/* line 26, ../_scss/objects/_post.scss */
.post-content h1, .post-content .h1 {
  text-align: center;
}
/* line 30, ../_scss/objects/_post.scss */
.post-content img {
  max-width: 100%;
}
/* line 34, ../_scss/objects/_post.scss */
.post-content p {
  text-align: justify;
}
@media (min-width: 480px) {
  /* line 34, ../_scss/objects/_post.scss */
  .post-content p {
    text-align: left;
  }
}
/* line 42, ../_scss/objects/_post.scss */
.post-content img {
  display: block;
}

@media (min-width: 480px) {
  /* line 1, ../_scss/objects/_img.scss */
  .img-right {
    float: right;
  }
}

@media (min-width: 480px) {
  /* line 7, ../_scss/objects/_img.scss */
  .img-left {
    float: left;
  }
}

@media (min-width: 480px) {
  /* line 13, ../_scss/objects/_img.scss */
  .img-2-5 {
    width: 40%;
  }
}

/* Variables hoisted to the top */
/* Support mobile by default, with no media query */
/*
If a constraint has been applied, we calculate the content width (the
breakpoint provided with whatever padding/margin substracted away) and
then calculate font size based on the given content width and font
size.
*/
/*
Because we already have a breakpoint, we must reverse engineer this
number to calculate the content width. Essentially this is just
substracting the padding and margin of the content from the breakpoint
to find the content width.
*/
/*
On mobile (devices with constraints), the margin of the content is
less.
*/
/* Round the line-height */
/*
Finally, created a media query and generate the styles of the type system.
*/
/* Golden ratio, used for the modular scale */
/* Change the modular scale for smaller devices */
/* Perfect fifth */
/* line 14, ../_scss/foundations/_type-system.scss */
body {
  font-size: 16px;
  line-height: 23px;
}

/* line 25, ../_scss/foundations/_type-system.scss */
h3, .h3,
h4,
.h4,
p,
blockquote,
ul,
ol,
pre {
  margin-top: 23px;
  margin-bottom: 23px;
}

/* line 32, ../_scss/foundations/_type-system.scss */
.b0-break {
  display: block;
}

/* line 36, ../_scss/foundations/_type-system.scss */
.b0-unbreak {
  display: inline;
}

/* line 40, ../_scss/foundations/_type-system.scss */
.l-container {
  max-width: 304px;
}

/* line 44, ../_scss/foundations/_type-system.scss */
.island {
  padding-right: 16px;
  padding-left: 16px;
}

/* line 51, ../_scss/foundations/_type-system.scss */
.post-content {
  width: 240px;
  margin-top: 69px;
  margin-bottom: 69px;
      /*
Modular scale typography as per
https:/*github.com/scottkellum/modular-scale/
*/
  /*
  Okay. I go a bit crazy and also calculate the optimal line height for
  headings, because they have different font sizes but share the same
  content width. Thus, the optimal line height will be different.
  */
}
/* line 67, ../_scss/foundations/_type-system.scss */
.post-content h1, .post-content .h1 {
  font-size: 28px;
  line-height: 38px;
  margin-top: 38px;
  margin-bottom: 38px;
  width: 240px;
}
/* line 71, ../_scss/foundations/_type-system.scss */
.post-content h2, .post-content .h2 {
  font-size: 21px;
  line-height: 29px;
  margin-top: 29px;
  margin-bottom: 29px;
  width: 240px;
}
/* line 75, ../_scss/foundations/_type-system.scss */
.post-content pre {
  /* We don’t need margins, so use the inside method */
  font-size: 13px;
  line-height: 19px;
  width: 208px;
  padding: 16px;
}
/* line 81, ../_scss/foundations/_type-system.scss */
.post-content img {
  margin-bottom: 23px;
}

/* Variables hoisted to the top */
/* Support mobile by default, with no media query */
/*
If a constraint has been applied, we calculate the content width (the
breakpoint provided with whatever padding/margin substracted away) and
then calculate font size based on the given content width and font
size.
*/
/*
Because we already have a breakpoint, we must reverse engineer this
number to calculate the content width. Essentially this is just
substracting the padding and margin of the content from the breakpoint
to find the content width.
*/
/*
On mobile (devices with constraints), the margin of the content is
less.
*/
/* Round the line-height */
/*
Finally, created a media query and generate the styles of the type system.
*/
@media (min-width: 480px) {
  /* Golden ratio, used for the modular scale */
  /* Change the modular scale for smaller devices */
  /* Perfect fifth */
  /* line 14, ../_scss/foundations/_type-system.scss */
  body {
    font-size: 16px;
    line-height: 24px;
  }

  /* line 25, ../_scss/foundations/_type-system.scss */
  h3, .h3,
  h4,
  .h4,
  p,
  blockquote,
  ul,
  ol,
  pre {
    margin-top: 24px;
    margin-bottom: 24px;
  }

  /* line 32, ../_scss/foundations/_type-system.scss */
  .b1-break {
    display: block;
  }

  /* line 36, ../_scss/foundations/_type-system.scss */
  .b1-unbreak {
    display: inline;
  }

  /* line 40, ../_scss/foundations/_type-system.scss */
  .l-container {
    max-width: 456px;
  }

  /* line 44, ../_scss/foundations/_type-system.scss */
  .island {
    padding-right: 16px;
    padding-left: 16px;
  }

  /* line 51, ../_scss/foundations/_type-system.scss */
  .post-content {
    width: 376px;
    margin-top: 72px;
    margin-bottom: 72px;
      /*
Modular scale typography as per
https:/*github.com/scottkellum/modular-scale/
*/
    /*
    Okay. I go a bit crazy and also calculate the optimal line height for
    headings, because they have different font sizes but share the same
    content width. Thus, the optimal line height will be different.
    */
  }
  /* line 67, ../_scss/foundations/_type-system.scss */
  .post-content h1, .post-content .h1 {
    font-size: 28px;
    line-height: 38px;
    margin-top: 38px;
    margin-bottom: 38px;
    width: 376px;
  }
  /* line 71, ../_scss/foundations/_type-system.scss */
  .post-content h2, .post-content .h2 {
    font-size: 21px;
    line-height: 30px;
    margin-top: 30px;
    margin-bottom: 30px;
    width: 376px;
  }
  /* line 75, ../_scss/foundations/_type-system.scss */
  .post-content pre {
    /* We don’t need margins, so use the inside method */
    font-size: 13px;
    line-height: 20px;
    width: 344px;
    padding: 16px;
  }
  /* line 81, ../_scss/foundations/_type-system.scss */
  .post-content img {
    margin-bottom: 24px;
  }
  /* line 86, ../_scss/foundations/_type-system.scss */
  .post-content .img-left {
    margin-right: 24px;
  }
  /* line 90, ../_scss/foundations/_type-system.scss */
  .post-content .img-right {
    margin-left: 24px;
  }
}
/* Variables hoisted to the top */
/* Support mobile by default, with no media query */
/*
If a constraint hasn't been applied, we are free to generate a content
width and line height based on the optimal settings.
*/
/*
The illusion of padding either side of the content is achieved by
adding to the width of the content.
*/
/* The margin of the content is 10% of the breakpoint width */
/* Round the line-height */
/*
Finally, created a media query and generate the styles of the type system.
*/
@media (min-width: 860.4px) {
  /* Golden ratio, used for the modular scale */
  /* Change the modular scale for smaller devices */
  /* line 14, ../_scss/foundations/_type-system.scss */
  body {
    font-size: 16px;
    line-height: 26px;
  }

  /* line 25, ../_scss/foundations/_type-system.scss */
  h3, .h3,
  h4,
  .h4,
  p,
  blockquote,
  ul,
  ol,
  pre {
    margin-top: 26px;
    margin-bottom: 26px;
  }

  /* line 32, ../_scss/foundations/_type-system.scss */
  .b2-break {
    display: block;
  }

  /* line 36, ../_scss/foundations/_type-system.scss */
  .b2-unbreak {
    display: inline;
  }

  /* line 40, ../_scss/foundations/_type-system.scss */
  .l-container {
    max-width: 817.38px;
  }

  /* line 44, ../_scss/foundations/_type-system.scss */
  .island {
    padding-right: 16px;
    padding-left: 16px;
  }

  /* line 51, ../_scss/foundations/_type-system.scss */
  .post-content {
    width: 685px;
    margin-top: 78px;
    margin-bottom: 78px;
      /*
Modular scale typography as per
https:/*github.com/scottkellum/modular-scale/
*/
    /*
    Okay. I go a bit crazy and also calculate the optimal line height for
    headings, because they have different font sizes but share the same
    content width. Thus, the optimal line height will be different.
    */
  }
  /* line 67, ../_scss/foundations/_type-system.scss */
  .post-content h1, .post-content .h1 {
    font-size: 42px;
    line-height: 57px;
    margin-top: 57px;
    margin-bottom: 57px;
    width: 685px;
  }
  /* line 71, ../_scss/foundations/_type-system.scss */
  .post-content h2, .post-content .h2 {
    font-size: 26px;
    line-height: 37px;
    margin-top: 37px;
    margin-bottom: 37px;
    width: 685px;
  }
  /* line 75, ../_scss/foundations/_type-system.scss */
  .post-content pre {
    /* We don’t need margins, so use the inside method */
    font-size: 13px;
    line-height: 23px;
    width: 653px;
    padding: 16px;
  }
  /* line 81, ../_scss/foundations/_type-system.scss */
  .post-content img {
    margin-bottom: 26px;
  }
  /* line 86, ../_scss/foundations/_type-system.scss */
  .post-content .img-left {
    margin-right: 26px;
  }
  /* line 90, ../_scss/foundations/_type-system.scss */
  .post-content .img-right {
    margin-left: 26px;
  }
}
/* Variables hoisted to the top */
/* Support mobile by default, with no media query */
/*
If a constraint hasn't been applied, we are free to generate a content
width and line height based on the optimal settings.
*/
/*
The illusion of padding either side of the content is achieved by
adding to the width of the content.
*/
/* The margin of the content is 10% of the breakpoint width */
/* Round the line-height */
/*
Finally, created a media query and generate the styles of the type system.
*/
@media (min-width: 1038px) {
  /* Golden ratio, used for the modular scale */
  /* Change the modular scale for smaller devices */
  /* line 14, ../_scss/foundations/_type-system.scss */
  body {
    font-size: 18px;
    line-height: 29px;
  }

  /* line 25, ../_scss/foundations/_type-system.scss */
  h3, .h3,
  h4,
  .h4,
  p,
  blockquote,
  ul,
  ol,
  pre {
    margin-top: 29px;
    margin-bottom: 29px;
  }

  /* line 32, ../_scss/foundations/_type-system.scss */
  .b3-break {
    display: block;
  }

  /* line 36, ../_scss/foundations/_type-system.scss */
  .b3-unbreak {
    display: inline;
  }

  /* line 40, ../_scss/foundations/_type-system.scss */
  .l-container {
    max-width: 986.1px;
  }

  /* line 44, ../_scss/foundations/_type-system.scss */
  .island {
    padding-right: 18px;
    padding-left: 18px;
  }

  /* line 51, ../_scss/foundations/_type-system.scss */
  .post-content {
    width: 829px;
    margin-top: 87px;
    margin-bottom: 87px;
      /*
Modular scale typography as per
https:/*github.com/scottkellum/modular-scale/
*/
    /*
    Okay. I go a bit crazy and also calculate the optimal line height for
    headings, because they have different font sizes but share the same
    content width. Thus, the optimal line height will be different.
    */
  }
  /* line 67, ../_scss/foundations/_type-system.scss */
  .post-content h1, .post-content .h1 {
    font-size: 47px;
    line-height: 64px;
    margin-top: 64px;
    margin-bottom: 64px;
    width: 829px;
  }
  /* line 71, ../_scss/foundations/_type-system.scss */
  .post-content h2, .post-content .h2 {
    font-size: 29px;
    line-height: 41px;
    margin-top: 41px;
    margin-bottom: 41px;
    width: 829px;
  }
  /* line 75, ../_scss/foundations/_type-system.scss */
  .post-content pre {
    /* We don’t need margins, so use the inside method */
    font-size: 14px;
    line-height: 25px;
    width: 793px;
    padding: 18px;
  }
  /* line 81, ../_scss/foundations/_type-system.scss */
  .post-content img {
    margin-bottom: 29px;
  }
  /* line 86, ../_scss/foundations/_type-system.scss */
  .post-content .img-left {
    margin-right: 29px;
  }
  /* line 90, ../_scss/foundations/_type-system.scss */
  .post-content .img-right {
    margin-left: 29px;
  }
}
/* Variables hoisted to the top */
/* Support mobile by default, with no media query */
/*
If a constraint hasn't been applied, we are free to generate a content
width and line height based on the optimal settings.
*/
/*
The illusion of padding either side of the content is achieved by
adding to the width of the content.
*/
/* The margin of the content is 10% of the breakpoint width */
/* Round the line-height */
/*
Finally, created a media query and generate the styles of the type system.
*/
@media (min-width: 1231.2px) {
  /* Golden ratio, used for the modular scale */
  /* Change the modular scale for smaller devices */
  /* line 14, ../_scss/foundations/_type-system.scss */
  body {
    font-size: 20px;
    line-height: 32px;
  }

  /* line 25, ../_scss/foundations/_type-system.scss */
  h3, .h3,
  h4,
  .h4,
  p,
  blockquote,
  ul,
  ol,
  pre {
    margin-top: 32px;
    margin-bottom: 32px;
  }

  /* line 32, ../_scss/foundations/_type-system.scss */
  .b4-break {
    display: block;
  }

  /* line 36, ../_scss/foundations/_type-system.scss */
  .b4-unbreak {
    display: inline;
  }

  /* line 40, ../_scss/foundations/_type-system.scss */
  .l-container {
    max-width: 1169.64px;
  }

  /* line 44, ../_scss/foundations/_type-system.scss */
  .island {
    padding-right: 20px;
    padding-left: 20px;
  }

  /* line 51, ../_scss/foundations/_type-system.scss */
  .post-content {
    width: 986px;
    margin-top: 96px;
    margin-bottom: 96px;
      /*
Modular scale typography as per
https:/*github.com/scottkellum/modular-scale/
*/
    /*
    Okay. I go a bit crazy and also calculate the optimal line height for
    headings, because they have different font sizes but share the same
    content width. Thus, the optimal line height will be different.
    */
  }
  /* line 67, ../_scss/foundations/_type-system.scss */
  .post-content h1, .post-content .h1 {
    font-size: 52px;
    line-height: 70px;
    margin-top: 70px;
    margin-bottom: 70px;
    width: 986px;
  }
  /* line 71, ../_scss/foundations/_type-system.scss */
  .post-content h2, .post-content .h2 {
    font-size: 32px;
    line-height: 46px;
    margin-top: 46px;
    margin-bottom: 46px;
    width: 986px;
  }
  /* line 75, ../_scss/foundations/_type-system.scss */
  .post-content pre {
    /* We don’t need margins, so use the inside method */
    font-size: 16px;
    line-height: 28px;
    width: 946px;
    padding: 20px;
  }
  /* line 81, ../_scss/foundations/_type-system.scss */
  .post-content img {
    margin-bottom: 32px;
  }
  /* line 86, ../_scss/foundations/_type-system.scss */
  .post-content .img-left {
    margin-right: 32px;
  }
  /* line 90, ../_scss/foundations/_type-system.scss */
  .post-content .img-right {
    margin-left: 32px;
  }
}
/* line 24, ../_scss/base.scss */
body {
  min-width: 320px;
  background-color: #1a1a1a;
}

/* Hide nav headings */
/* line 31, ../_scss/base.scss */
nav > h1, nav > .h1 {
  display: none;
}

/* line 36, ../_scss/base.scss */
pre {
  background: ghostWhite;
  border: 1px solid #e6e6e6;
}

/* line 41, ../_scss/base.scss */
.l-container {
  margin-left: auto;
  margin-right: auto;
}

/* line 47, ../_scss/base.scss */
.l-header,
.l-header a {
  color: white;
}

/* line 52, ../_scss/base.scss */
.l-header-logo {
  text-align: center;
}
/* line 56, ../_scss/base.scss */
.l-header-logo a:hover {
  text-decoration: none;
}

/* line 64, ../_scss/base.scss */
.l-footer,
.l-footer a {
  color: gray;
}
